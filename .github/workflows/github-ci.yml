name: GitHub CI

on:
  push:
    branches: [ master ]
    tags: [ '**' ]

jobs:
  ci-build:
    strategy:
      fail-fast: false
      matrix:
        cfg:
        - os: ubuntu-20.04
          python-version: 3.8
          target: linux
          target-arch: x64
        - os: macos-10.15
          python-version: 3.8
          target: mac
          target-arch: x64
        - os: windows-2019
          python-version: 3.8
          target: windows
          target-arch: x86

    name: ${{ matrix.cfg.os }} ${{ github.ref }}
    runs-on: ${{ matrix.cfg.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with: 
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.cfg.python-version }}
        architecture: ${{ matrix.cfg.target-arch }}

    - name: Set up build deps
      shell: bash
      run: |
        if [ "${{ matrix.cfg.target }} = "linux"   ]; then sudo apt-get -yq update && sudo apt-get -yq install upx; fi
        if [ "${{ matrix.cfg.target }} = "windows" ]; then pip3 install pypiwin32 pefile; fi
        pip3 install -r build/requirements.txt
        pip3 install pyinstaller

    - name: Determine package version
      id: gitVersion
      shell: bash
      run: |
        echo ::set-output name=VERSION::$(echo $GIT_REF | cut -d'/' -f3- | tr '/' '_')
      env:
        GIT_REF: ${{ github.ref }}

    - name: Build packages
      shell: bash
      run: |
        cd build/; ./package.sh
      env:
        CI_OS_NAME: ${{ matrix.cfg.target }}
        CI_GIT_TAG: ${{ steps.gitVersion.outputs.VERSION }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.cfg.target }}-${{ matrix.cfg.target-arch }}
        path: |
          ${{ github.workspace }}/dist/wildfire-maps_*.tar.gz
          ${{ github.workspace }}/dist/wildfire-maps_*.zip
